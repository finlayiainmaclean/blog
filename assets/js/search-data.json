{
  
    
        "post0": {
            "title": "Hello World",
            "content": "Interesting papers . Clinical success rates Very in-depth study into what factors contribute to a drug being approved. . | Bidrectional genetic genes with both GoF and LoF mutations are 4x more likely the become drug targets (when one would assume they would only be 2x more likely). . | Revision of the seminal paper showing targets with genetic evidence are more likely to be approved. . | Paper using correlation-based diffusion through an PPI network, using DEGs as seeds. Diffused genes are more highly correlated with perturbed gene in respective study. . | Great chemoinformatics blog (where this blog gets it&#39;s namesake) . | Another great chemoinformatics blog. . | . Project ideas . Standardised FAERS data | Could build a model to predict odds ratio, imputing missing drug/phenotype pairs | After mapping drugs to direction (inhibit/activate) and target, one could see which protein level changes have affect on the phenotype. | .",
            "url": "https://finlayiainmaclean.github.io/blog/jupyter/2021/10/06/hello_world.html",
            "relUrl": "/jupyter/2021/10/06/hello_world.html",
            "date": " • Oct 6, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Prerank GSEA for assayable biological processes",
            "content": "Whilst it often useful to use GeneOntology&#39;s biological processes to approximate the pathomechanisms of a disease, one frequently finds themself whittling through a list of enriched biological processes, trying to find a process that is actually assayable. . Fortunately, living deep within the Supplementary Material of a Nature paper, lives a curated list of processes testable through specific molecular experiments. . Let&#39;s install gseapy and download the data. . !pip install gseapy !wget https://static-content.springer.com/esm/art%3A10.1038%2Fng.3259/MediaObjects/41588_2015_BFng3259_MOESM9_ESM.xlsx !mv 41588_2015_BFng3259_MOESM9_ESM.xlsx processes.xlsx !wget https://static-content.springer.com/esm/art%3A10.1038%2Fng.3259/MediaObjects/41588_2015_BFng3259_MOESM12_ESM.xlsx !mv 41588_2015_BFng3259_MOESM12_ESM.xlsx tissue_go_mapping.xlsx !wget https://raw.githubusercontent.com/finlayiainmaclean/datadump/main/EFO_0000342-associated-diseases.csv !curl -OL https://github.com/finlayiainmaclean/datadump/blob/main/genego.tab.zip?raw=true !unzip genego.tab.zip?raw=true . import gseapy as gp import pandas as pd import numpy as np . gene2go.go.nunique(), len(processes) . (12248, 973) . There are 973 testable processes out of 12248.. Not that many.. . processes = pd.read_excel(&#39;processes.xlsx&#39;, skiprows=1) processes . GO Term Name GO Term ID . 0 abscisic_acid_mediated_signaling_pathway | GO:0009738 | . 1 abscisic_acid_metabolic_process | GO:0009687 | . 2 acetyl_coa_biosynthetic_process_from_acetate | GO:0019427 | . 3 acetylcholine_transport | GO:0015870 | . 4 actin_cytoskeleton_reorganization | GO:0031532 | . ... ... | ... | . 968 xanthophyll_metabolic_process | GO:0016122 | . 969 xenobiotic_metabolic_process | GO:0006805 | . 970 xylan_catabolic_process | GO:0045493 | . 971 xylem_and_phloem_pattern_formation | GO:0010051 | . 972 zinc_ion_transport | GO:0006829 | . 973 rows × 2 columns . The paper also mapped tissues to biological processes via first using co-occurences, and then manually curating the list. . tissue_mapping = pd.read_excel(&#39;tissue_go_mapping.xlsx&#39;, skiprows=1).set_index(&#39;BRENDA Tissue ID&#39;) bto2name = dict(zip(tissue_mapping.index, tissue_mapping.Tissue)) go2bto = {} for bto, row in tissue_mapping.drop(columns=[&#39;Tissue&#39;]).iterrows(): for go in row: if go is None: break go2bto[go] = bto . Let&#39;s run a prerank gene set enrichment analysis, using only testable biological processes. First we need to generate a geneset. . genego = pd.read_csv(&#39;genego.tab&#39;,sep=&#39; t&#39;) gene2go = [] go2name = {} for row in genego.dropna(subset=[&#39;Gene ontology (biological process)&#39;]).itertuples(): for _go in row[4].split(&#39;; &#39;): go = _go.split(&#39;[&#39;)[1].replace(&#39;]&#39;,&#39;&#39;) name = _go.split(&#39; [&#39;)[0] gene2go.append((row[2], go)) go2name[go] = name gene2go = pd.DataFrame(gene2go,columns =[&#39;gene&#39;,&#39;go&#39;]) gene2go_dict = gene2go.groupby(&#39;go&#39;)[&#39;gene&#39;].apply(list).to_dict() gene2go_testable_dict = dict([(i, gene2go_dict[i]) for i in np.intersect1d(processes[&#39;GO Term ID&#39;], gene2go.go)]) . Let&#39;s run the prerankGSEA for chronic pancreatitis genes, defined by the overall association score in OpenTargets. . cp_targets = pd.read_csv(&#39;EFO_0000342-associated-diseases.csv&#39;) cp_targets.head(5) . symbol overallAssociationScore geneticAssociations somaticMutations drugs pathwaysSystemsBiology textMining rnaExpression animalModels targetName . 0 PRSS1 | 0.834384 | 0.9183390021590296 | No data | No data | No data | 0.1838682865290527 | No data | 0.5693580106773287 | serine protease 1 | . 1 SPINK1 | 0.804783 | 0.8862311248507138 | No data | No data | No data | 0.23856390277427408 | No data | 0.3298784490540059 | serine peptidase inhibitor Kazal type 1 | . 2 CTRC | 0.740035 | 0.8910696416923192 | No data | No data | No data | 0.09941106709313025 | No data | 0.29290105828927904 | chymotrypsin C | . 3 CFTR | 0.696968 | 0.9074161629304885 | No data | No data | No data | 0.2678564156117781 | No data | 0.3978335055391351 | CF transmembrane conductance regulator | . 4 VDR | 0.369580 | No data | No data | 0.607930797611621 | No data | No data | No data | No data | vitamin D receptor | . Running the enrichment, we see calcium-mediated signaling as one of the most enriched testable processes. . pre_res = gp.prerank(rnk=cp_targets[[&#39;symbol&#39;,&#39;overallAssociationScore&#39;]].copy(), gene_sets=gene2go_testable_dict.copy(), processes=2, permutation_num=500, # reduce number to speed up testing outdir=&#39;prerank_report&#39;, format=&#39;png&#39;, seed=6) pre_res = pd.read_csv(&#39;prerank_report/gseapy.prerank.gene_sets.report.csv&#39;) pre_res[&#39;go_name&#39;] = pre_res.Term.apply(go2name.get) #Map tissue pre_res[&#39;bto&#39;] = pre_res.Term.apply(go2bto.get) pre_res[&#39;tissue_name&#39;] = pre_res.bto.apply(bto2name.get) pre_res = pre_res.sort_values(by=&#39;es&#39;,ascending=False) pre_res.head(10) . Term es nes pval fdr geneset_size matched_size genes ledge_genes go_name bto tissue_name . 0 GO:0006367 | 0.827233 | 1.431275 | 0.016000 | 0.220365 | 140 | 17 | VDR;NR3C1;CREBBP;CCN2;PGR;THRA;PPARG;E2F2;NR4A... | VDR;NR3C1;CREBBP;CCN2;PGR;THRA | transcription initiation from RNA polymerase I... | None | None | . 4 GO:0006919 | 0.742733 | 1.288945 | 0.068000 | 0.846401 | 89 | 21 | CDKN2A;NGFR;S100A9;NGF;EIF2AK3;NLRP1;BAD;PPARG... | CDKN2A;NGFR;S100A9;NGF;EIF2AK3;NLRP1;BAD | activation of cysteine-type endopeptidase acti... | None | None | . 1 GO:0016579 | 0.736472 | 1.287383 | 0.062000 | 0.577623 | 265 | 25 | CFTR;SMAD4;IL33;PTEN;TP53;BAP1;CYLD;HIF1A;MYC;... | CFTR;SMAD4 | protein deubiquitination | None | None | . 3 GO:0009749 | 0.720428 | 1.247147 | 0.122000 | 0.618023 | 62 | 18 | SLC8A1;CCN2;ILDR2;GIPR;BAD;PTEN;NEUROD1;MAFA;R... | SLC8A1;CCN2;ILDR2;GIPR;BAD;PTEN;NEUROD1;MAFA;R... | response to glucose | None | None | . 2 GO:0042593 | 0.695962 | 1.227794 | 0.060000 | 0.577756 | 104 | 37 | NGFR;PDX1;BHLHA15;GCK;INS;LEP;GCGR;WFS1;LEPR;C... | NGFR;PDX1;BHLHA15;GCK;INS;LEP;GCGR;WFS1;LEPR;C... | glucose homeostasis | None | None | . 5 GO:0019722 | 0.664942 | 1.138633 | 0.197581 | 0.944897 | 71 | 17 | CXCR2;CXCR1;BHLHA15;EIF2AK3;PDPK1;CHRM3;TRPM4;... | CXCR2;CXCR1;BHLHA15;EIF2AK3;PDPK1;CHRM3 | calcium-mediated signaling | None | None | . 6 GO:0050821 | 0.636343 | 1.112191 | 0.252505 | 0.976760 | 197 | 21 | CDKN2A;WFS1;PTEN;TP53;CDKN1A;CHEK2;SMAD3;PARK7... | CDKN2A;WFS1;PTEN;TP53;CDKN1A | protein stabilization | None | None | . 8 GO:0001666 | 0.603386 | 1.069221 | 0.310000 | 1.000000 | 157 | 36 | SMAD4;CREBBP;LEP;TLR2;CD38;NF1;HIF1A;EGR1;REG1... | SMAD4;CREBBP;LEP;TLR2;CD38 | response to hypoxia | None | None | . 9 GO:0016567 | 0.600506 | 1.053758 | 0.344000 | 1.000000 | 414 | 21 | CRBN;DDB1;RBX1;CUL4A;FEM1B;SMURF1;CUL9;SOCS1;H... | CRBN;DDB1;RBX1;CUL4A;FEM1B;SMURF1;CUL9;SOCS1 | protein ubiquitination | None | None | . 10 GO:0007204 | 0.583698 | 1.035730 | 0.380000 | 1.000000 | 149 | 25 | CXCR2;CXCR1;CD38;PKD1;GIPR;FFAR1;GHRL;CCKBR;JA... | CXCR2;CXCR1;CD38;PKD1;GIPR;FFAR1;GHRL;CCKBR;JA... | positive regulation of cytosolic calcium ion c... | None | None | . Let&#39;s take a look at the ES plot for calcium signalling. . from IPython.display import Image Image(&#39;GO:0019722.prerank.png&#39;,width=1000, height=1000) . How does the python package gseapy compare with the R library fgsea? First let&#39;s set up R magic for colab, and install Bioconductor. . %load_ext rpy2.ipython . The rpy2.ipython extension is already loaded. To reload it, use: %reload_ext rpy2.ipython . %%R if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;fgsea&quot;) . %%R library(fgsea) library(data.table) library(ggplot2) . I&#39;m sure there is a way to convert our python dict geneset to R&#39;s ListVector,but I cba to work it out. Instead, let&#39;s create a GMT format geneset from the pandas dataframe. . df = pd.DataFrame(zip(gene2go_testable_dict.keys(), gene2go_testable_dict.values())) gene2go_testable_gmt = pd.DataFrame(df[1].tolist(), index= df[0]) gene2go_testable_gmt.to_csv(&#39;testable_processes.gmt&#39;,sep=&#39; t&#39;,header=None) %R pathways &lt;- gmtPathways(&#39;testable_processes.gmt&#39;) . ListVector with 638 elements. GO:0000054 StrVector with 412 elements. &#39;LSG1&#39; | &#39;ABCE1&#39; | &#39;EIF6&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0000077 StrVector with 412 elements. &#39;RAD1&#39; | &#39;USP28&#39; | &#39;PTPN11&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0000097 StrVector with 412 elements. &#39;&#39; | &#39;&#39; | &#39;&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . ... ... | . GO:0090398 StrVector with 412 elements. &#39;H2AX&#39; | &#39;TBX3&#39; | &#39;SMC5&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0097191 StrVector with 412 elements. &#39;SMAD3&#39; | &#39;SGPP1&#39; | &#39;PML&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0097193 StrVector with 412 elements. &#39;SGPP1&#39; | &#39;MSH6&#39; | &#39;HRAS&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . And the same with our scores, converting them into rnk file format. . # cp_targets[&#39;overallAssociationScore&#39;] = genetic_gp_targets[&#39;overallAssociationScore&#39;].astype(float) cp_targets[[&#39;symbol&#39;,&#39;overallAssociationScore&#39;]].to_csv(&#39;cp_targets.rnk&#39;,sep=&#39; t&#39;, index=False) . %%R ranks &lt;- read.table(&#39;cp_targets.rnk&#39;, header=TRUE, colClasses = c(&quot;character&quot;, &quot;numeric&quot;)) ranks &lt;- setNames(ranks$overallAssociationScore, ranks$symbol) . Running fgsea with (roughly) the same config as fgsea&#39;s python counterpart. . %%R -o results results &lt;- fgsea(pathways = pathways, stats = ranks, minSize = 15, maxSize = 500) old_results &lt;- results results$leadingEdge &lt;- lapply(results$leadingEdge, function(v) paste(v, collapse=&#39;,&#39;)) results &lt;- data.frame(lapply(results, unlist)) . results[&#39;go_name&#39;] = results.pathway.apply(go2name.get) results.sort_values(by=&#39;NES&#39;, ascending=False).head(10) . pathway pval padj log2err ES NES size leadingEdge go_name . 4 GO:0006367 | 0.022816 | 0.398352 | 0.352488 | 0.827233 | 1.444742 | 17 | VDR,NR3C1,CREBBP,CCN2,PGR,THRA | transcription initiation from RNA polymerase I... | . 7 GO:0006919 | 0.054000 | 0.398352 | 0.191892 | 0.742733 | 1.305878 | 21 | CDKN2A,NGFR,NGF,S100A9,EIF2AK3,NLRP1,BAD | activation of cysteine-type endopeptidase acti... | . 16 GO:0016579 | 0.048951 | 0.398352 | 0.202072 | 0.736472 | 1.299012 | 25 | CFTR,SMAD4,IL33,PTEN | protein deubiquitination | . 13 GO:0009749 | 0.090271 | 0.523571 | 0.145516 | 0.720428 | 1.263514 | 18 | SLC8A1,CCN2,ILDR2,GIPR,BAD,PTEN,NEUROD1,MAFA,R... | response to glucose | . 23 GO:0042593 | 0.054945 | 0.398352 | 0.190023 | 0.692868 | 1.233166 | 36 | NGFR,PDX1,BHLHA15,GCK,INS,LEP,GCGR,WFS1,LEPR,C... | glucose homeostasis | . 18 GO:0019722 | 0.186935 | 0.903518 | 0.095603 | 0.664942 | 1.161305 | 17 | CXCR2,CXCR1,BHLHA15,EIF2AK3,PDPK1,CHRM3 | calcium-mediated signaling | . 26 GO:0050821 | 0.226000 | 0.936286 | 0.084556 | 0.636343 | 1.118822 | 21 | CDKN2A,WFS1,PTEN,TP53,CDKN1A | protein stabilization | . 3 GO:0001666 | 0.280719 | 0.995976 | 0.073074 | 0.603386 | 1.073906 | 36 | SMAD4,CREBBP,LEP,TLR2,CD38 | response to hypoxia | . 15 GO:0016567 | 0.332000 | 0.995976 | 0.064794 | 0.600506 | 1.055813 | 21 | CUL4A,RBX1,CRBN,DDB1,FEM1B,SMURF1,CUL9,SOCS1,H... | protein ubiquitination | . 9 GO:0007204 | 0.412587 | 0.995976 | 0.054456 | 0.582426 | 1.027300 | 25 | CXCR2,CXCR1,CD38,PKD1,GIPR,FFAR1,GHRL,CCKBR,JA... | positive regulation of cytosolic calcium ion c... | . The ES plot for calcium signalling looks pretty similiar. . %%R plotEnrichment(pathways[[&quot;GO:0019722&quot;]], ranks) + labs(title=&quot;calcium-mediated signaling&quot;) . The fgsea package also have a gsea table plotting function. I don&#39;t think this really provides any additional information not shown in the pandas dataframe. The FDR for both packages is worryingly high. Perhaps this is due to either a very small geneset (there&#39;s only around ~600 goprocesses), or a relatively small number of genes with scores. Normally you would run prerank GSEA on the DEGs of a t&#39;omics comparison, and thus would have ~20,000 genes/score pairs. . %%R topPathwaysUp &lt;- old_results[ES &gt; 0][head(order(pval), n=10), pathway] topPathwaysDown &lt;- old_results[ES &lt; 0][head(order(pval), n=10), pathway] topPathways &lt;- c(topPathwaysUp, rev(topPathwaysDown)) plotGseaTable(pathways[topPathways], ranks, old_results, gseaParam=0.5) .",
            "url": "https://finlayiainmaclean.github.io/blog/useful_resources/2021/10/06/_10_07_testable_processes.html",
            "relUrl": "/useful_resources/2021/10/06/_10_07_testable_processes.html",
            "date": " • Oct 6, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://finlayiainmaclean.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://finlayiainmaclean.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}