{
  
    
        "post0": {
            "title": "Drug repurposing using knowledge graph embeddings",
            "content": "Since Himmelstein, the grandfather of biomedical knowledge graphs, used Hetionet for drug repurposing, there have been many subsequent attempts to build both better knowledge graphs, and better link prediction models. . One of the most recent attempts at both of these tasks is the Drug Repurposing Knowledge Graph (DRKG) by a team of researchers at Amazon. . Their KG is pretty comprehensive, bringing together the aforementioned Hetionet, DrugBank, the literature-derived Global Network of Biological Relationships, STRING, IntAct and DGIdb. . . The main shortcoming of this KG, is no relationships are mapped to some universal meaning. For example, there are drug-treats-disease edges in GNBR, DrugBank, ChEMBL and Hetionet. There&#39;s also a large bunch of drug-inhibits-gene, each with their own inclusion criteria. In an ideal world, these semantically similar relations would be near eachother in the embedding space. If we look at a TSNE plot of the relationship embeddings, it seems this isn&#39;t the case - GNBR relations cluster together, and so do DGIdb relations. . !git clone https://github.com/gnn4dr/DRKG.git !wget https://dgl-data.s3-us-west-2.amazonaws.com/dataset/DRKG/drkg.tar.gz !gzip -d drkg.tar.gz !tar --get -f drkg.tar !rm -rf drkg.tar . import sys sys.path.append(&#39;DRKG/&#39;) import utils import csv import torch as th import numpy as np import pandas as pd from matplotlib import cm import matplotlib.pyplot as plt from sklearn.utils import check_random_state from sklearn.manifold import TSNE import torch.nn.functional as fn . rels = pd.read_csv(&#39;relation_glossary.tsv&#39;, sep=&#39; t&#39;) rel2id = dict(zip(rels[&#39;Relation-name&#39;],rels.index.tolist())) dataset_id = {} for rel_name, i in rel2id.items(): rel_key = rel_name.split(&#39;::&#39;)[0] if dataset_id.get(rel_key, None) is None: dataset_id[rel_key] = [] dataset_id[rel_key].append(i) X_embedded = TSNE(n_components=2).fit_transform(rel_emb).T p = cm.rainbow(int(255/2 * 1)) fig = plt.figure() ax = fig.add_subplot(111) for key, val in dataset_id.items(): val = np.asarray(val, dtype=np.long) ax.plot(X_embedded[0][val], X_embedded[1][val], &#39;.&#39;, label=key) lgd = ax.legend(bbox_to_anchor=(1.0, 1.0)) plt.savefig(&#39;relation.eps&#39;, bbox_extra_artists=(lgd,), bbox_inches=&#39;tight&#39;, format=&#39;eps&#39;) . The PostScript backend does not support transparency; partially transparent artists will be rendered opaque. The PostScript backend does not support transparency; partially transparent artists will be rendered opaque. . Let&#39;s use the various drug-treats-disease relations to find some repurposable drugs for chronic pancreatits. . # download_and_extract() # Get all drugbank IDs for all drugs !wget https://raw.githubusercontent.com/dhimmel/drugbank/gh-pages/data/drugbank.tsv drugbank = pd.read_csv(&#39;drugbank.tsv&#39;,sep=&#39; t&#39;) drugbank[&#39;drugbank_id&#39;] = &#39;Compound::&#39;+drugbank.drugbank_id drug_list = drugbank[&#39;drugbank_id&#39;].tolist() # There are 3 treatment edges from Hetionet, GNBC and DrugBank treatment = [&#39;Hetionet::CtD::Compound:Disease&#39;,&#39;GNBR::T::Compound:Disease&#39;,&#39;DRUGBANK::treats::Compound:Disease&#39;] # MESH ID for chronic pancreatits disease_list = [ &#39;Disease::MESH:D050500&#39; ] # Get drugname/disease name to entity ID mappings entity_idmap_file = &#39;embed/entities.tsv&#39; relation_idmap_file = &#39;embed/relations.tsv&#39; entity_id_map = pd.read_csv(entity_idmap_file,sep=&#39; t&#39;, header=None) entity_id_map = dict(zip(entity_id_map[1], entity_id_map[0])) relation_map = pd.read_csv(relation_idmap_file,sep=&#39; t&#39;, header=None) relation_map = dict(zip(relation_map[0], relation_map[1])) # handle the ID mapping drug_ids = [] disease_ids = [] for drug in drug_list: if drug in list(entity_id_map.values()): drug_ids.append(entity_map[drug]) for disease in disease_list: disease_ids.append(entity_map[disease]) treatment_rid = [relation_map[treat] for treat in treatment] # Load embeddings entity_emb = np.load(&#39;embed/DRKG_TransE_l2_entity.npy&#39;) rel_emb = np.load(&#39;embed/DRKG_TransE_l2_relation.npy&#39;) # Get ids drug_ids = th.tensor(drug_ids).long() disease_ids = th.tensor(disease_ids).long() treatment_rid = th.tensor(treatment_rid) # Get embeddings drug_emb = th.tensor(entity_emb[drug_ids]) treatment_embs = [th.tensor(rel_emb[rid]) for rid in treatment_rid] . gamma=12.0 #TransE score function def transE_l2(head, rel, tail): score = head + rel - tail return gamma - th.norm(score, p=2, dim=-1) scores_per_disease = [] dids = [] for rid in range(len(treatment_embs)): treatment_emb=treatment_embs[rid] for disease_id in disease_ids: disease_emb = entity_emb[disease_id] score = fn.logsigmoid(transE_l2(drug_emb, treatment_emb, disease_emb)) scores_per_disease.append(score) dids.append(drug_ids) scores = th.cat(scores_per_disease) dids = th.cat(dids) # sort scores in decending order idx = th.flip(th.argsort(scores), dims=[0]) scores = scores[idx].numpy() dids = dids[idx].numpy() _, unique_indices = np.unique(dids, return_index=True) topk=100 topk_indices = np.sort(unique_indices)[:topk] proposed_dids = dids[topk_indices] proposed_scores = scores[topk_indices] # Create dataframe of scores with drug metadata scores = pd.DataFrame(zip([entity_id_map[i] for i in proposed_dids], proposed_scores)) scores.columns = [&#39;drugbank_id&#39;,&#39;score&#39;] scores = scores.merge(drugbank, on=&#39;drugbank_id&#39;) . Inital thoughts on predictions for CP . Octreotide - Definitely the most interesting of suggestions. Octreotide is synthetic analogue of the peptide hormone somatostatin. In the pancreas, somatostatin inhibits the secretion of pancreatic hormones, including glucagon and insulin. In the gastrointestinal tract, the hormone reduces gastric secretion and the emission of gastrointestinal hormones, such as secretin and gastrin. Specific somatostatin receptors can modulate secretory response of the acinar cells via reduction of intracellular cAMP. Researchers have shown IV octreotide raises somatostatin to normal levels in plasma, and reduces circulating TNFÎ± and IL6, reducing severity of the disease. . | Dexamethasone - Large dose dexamethasone is known to reduce severity of SAP, but the mechanism is still not fully estabished. A research group demonstrated that potential mechanisms were related to the inflammatory mediators inhibition and pancreatic acinar cell apoptosis. Another group showed upregulation of PAP genes. Both inflammation and acinar cell apopotsis are shared pathomechanisms in SAP and CP. It seems reasonable that large doses of dexamethasone could be beneficial for CP. . | Ursodeoxycholic acid - UDCA has been shown to reduce pancreatitic enzyme secretion. This paper describes a marked decrease in trypsin levels. This paper shows a protective effect of oral UDCA on pancreatic ductal injury by reducing apoptosis. . | Cholestrol/Simvastatin - Patients with low (&lt;160 mg/dL) or high total cholesterol levels (&gt;240 mg/dL) had a high incidence of severe acute pancreatitis ref30041-X/fulltext). Simvastatin is an anticholesteremic, so it&#39;s logical that lowering high cholestrol levels could have a protective effect against CP. . | Ethanol, ceruletide, L-arginine, pentagastrin - It seems the model has conflated molecules that cause (or contribute) to CP, with molecules that can treat the disease. Ethanol, ceruletide, L-arginine, pentagastrin are all used to induce CP in experimental models. . | Calcium - CP is a calcifying fibrotic disease predominantly caused by Ca2+ dysregulation in acinar cells driven by LoF and GoF mutations in CFTR. It&#39;s promising the model highly associated calcium with the disease. . | Glutathione - There is a known interplay between reactive oxygen species (ROS) and Ca2+ signaling, and antioxidant therapy has been suggested for CP. Enhanced generation of oxygen radicals cause changes in glutathione metabolism ref, although I&#39;m unsure if a nutriceutical administration of glutathione would affect the upstream process of ROS buildup. . | Progesterone, Testosterone - The appearance of hormones is pretty interesting. Women who have used hormone replacement therapy have a significantly higher risk of developing AP (I think 57% but I can&#39;t remember the source). I have no idea how hormone deficiencies relate to the pathomechanisms of AP/CP. . | . from pandas import option_context with option_context(&#39;display.max_colwidth&#39;, 200): display(scores.head(20).drop(columns=[&#39;type&#39;,&#39;atc_codes&#39;,&#39;inchi&#39;,&#39;inchikey&#39;])) . drugbank_id score name groups categories description . 0 Compound::DB00403 | -0.243431 | Ceruletide | approved | Diagnostic Agents | Caerulein is a specific decapeptide similar in action and composition to the natural gastrointestinal peptide hormone cholecystokinin. It stimulates gastric, biliary, and pancreatic secretion; and... | . 1 Compound::DB04540 | -0.252672 | Cholesterol | experimental | NaN | The principal sterol of all higher animals, distributed in body tissues, especially the brain and spinal cord, and in animal fats and oils. [PubChem] | . 2 Compound::DB01234 | -0.298165 | Dexamethasone | approved|investigational | Antineoplastic Agents, Hormonal|Anti-Inflammatory Agents|Glucocorticoids|Antiemetics | An anti-inflammatory 9-fluoro-glucocorticoid. [PubChem] | . 3 Compound::DB00104 | -0.301983 | Octreotide | approved|investigational | Antineoplastic Agents, Hormonal|Gastrointestinal Agents|Hormone Replacement Agents | Octreotide is the acetate salt of a cyclic octapeptide. It is a long-acting octapeptide with pharmacologic properties mimicking those of the natural hormone somatostatin. | . 4 Compound::DB02772 | -0.305478 | Sucrose | experimental | NaN | A nonreducing disaccharide composed of glucose and fructose linked via their anomeric carbons. It is obtained commercially from sugarcane, sugar beet (beta vulgaris), and other plants and used ext... | . 5 Compound::DB00898 | -0.316161 | Ethanol | approved | Anti-Infective Agents, Local|Central Nervous System Depressants|Solvents | A clear, colorless liquid rapidly absorbed from the gastrointestinal tract and distributed throughout the body. It has bactericidal activity and is used often as a topical disinfectant. It is wide... | . 6 Compound::DB00125 | -0.322239 | L-Arginine | approved|nutraceutical | Dietary Supplements|Micronutrients|Conditionally Essential Amino Acids|Supplements | An essential amino acid that is physiologically active in the L-form. [PubChem] | . 7 Compound::DB01775 | -0.330103 | Dihydroxyacetone | experimental | NaN | A ketotriose compound. Its addition to blood preservation solutions results in better maintenance of 2,3-diphosphoglycerate levels during storage. It is readily phosphorylated to dihydroxyacetone ... | . 8 Compound::DB00644 | -0.337302 | Gonadorelin | approved | NaN | Gonadorelin is another name for gonadotropin-releasing hormone (GnRH). It is a synthetic decapeptide prepared using solid phase peptide synthesis. GnRH is responsible for the release of follicle s... | . 9 Compound::DB00183 | -0.348871 | Pentagastrin | approved | Diagnostic Agents | A synthetic pentapeptide that has effects like gastrin when given parenterally. It stimulates the secretion of gastric acid, pepsin, and intrinsic factor, and has been used as a diagnostic aid. [P... | . 10 Compound::DB05381 | -0.350090 | histamine dihydrochloride | investigational | NaN | A depressor amine derived by enzymatic decarboxylation of histidine. It is a powerful stimulant of gastric secretion, a constrictor of bronchial smooth muscle, a vasodilator, and also a centrally ... | . 11 Compound::DB00119 | -0.360811 | Pyruvic acid | approved|nutraceutical | Dietary Supplements|Micronutrients|Supplements | An intermediate compound in the metabolism of carbohydrates, proteins, and fats. In thiamine deficiency, its oxidation is retarded and it accumulates in the tissues, especially in nervous structur... | . 12 Compound::DB00396 | -0.363712 | Progesterone | approved | Progestins|Contraceptive Agents | The major progestational steroid that is secreted primarily by the corpus luteum and the placenta. Progesterone acts on the uterus, the mammary glands, and the brain. It is required in embryo impl... | . 13 Compound::DB01373 | -0.373770 | Calcium | nutraceutical | NaN | Calcium plays a vital role in the anatomy, physiology and biochemistry of organisms and of the cell, particularly in signal transduction pathways. The skeleton acts as a major mineral storage site... | . 14 Compound::DB00641 | -0.377616 | Simvastatin | approved | Anticholesteremic Agents|Hydroxymethylglutaryl-CoA Reductase Inhibitors|Hypolipidemic Agents | Simvastatin is a lipid-lowering agent that is derived synthetically from the fermentation of Aspergillus terreus. It is a potent competitive inhibitor of 3-hydroxy-3-methylglutaryl coenzyme A redu... | . 15 Compound::DB00143 | -0.400171 | Glutathione | approved|nutraceutical | Dietary Supplements|Micronutrients|Supplements | A tripeptide with many roles in cells. It conjugates to drugs to make them more soluble for excretion, is a cofactor for some enzymes, is involved in protein disulfide bond rearrangement and redu... | . 16 Compound::DB03904 | -0.404884 | Urea | experimental | NaN | A compound formed in the liver from ammonia produced by the deamination of amino acids. It is the principal end product of protein catabolism and constitutes about one half of the total urinary so... | . 17 Compound::DB01708 | -0.412452 | Dehydroepiandrosterone | nutraceutical | Adjuvants, Immunologic | Dehydroepiandrosterone (DHEA) is a major C19 steroid produced by the adrenal cortex. It is also produced in small quantities in the testis and the ovary. Dehydroepiandrosterone (DHEA) can be conve... | . 18 Compound::DB00624 | -0.414911 | Testosterone | approved|investigational | Androgens | Testosterone is a steroid sex hormone found in both men and women. In men, testosterone is produced primarily by the Leydig (interstitial) cells of the testes when stimulated by luteinizing hormon... | . 19 Compound::DB01586 | -0.416042 | Ursodeoxycholic acid | approved|investigational | Cholagogues and Choleretics | Ursodeoxycholic acid is an epimer of chenodeoxycholic acid (DB06777). It is a mammalian bile acid found first in the bear and is apparently either a precursor or a product of chenodeoxycholate. It... | .",
            "url": "https://finlayiainmaclean.github.io/blog/useful_resources/chronic_pancreatitis/2021/10/13/drkg.html",
            "relUrl": "/useful_resources/chronic_pancreatitis/2021/10/13/drkg.html",
            "date": " â¢ Oct 13, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Drug repurposing using knowledge graph embeddings",
            "content": "Since Himmelstein, the grandfather of biomedical knowledge graphs, used Hetionet for drug repurposing, there have been many subsequent attempts to build both better knowledge graphs, and better link prediction models. . One of the most recent attempts at both of these tasks is the Drug Repurposing Knowledge Graph (DRKG) by a team of researchers at Amazon. . Their KG is pretty comprehensive, bringing together the aforementioned Hetionet, DrugBank, the literature-derived Global Network of Biological Relationships, STRING, IntAct and DGIdb. . . The main shortcoming of this KG, is no relationships are mapped to some universal meaning. For example, there are drug-treats-disease edges in GNBR, DrugBank, ChEMBL and Hetionet. There&#39;s also a large bunch of drug-inhibits-gene, each with their own inclusion criteria. In an ideal world, these semantically similar relations would be near eachother in the embedding space. If we look at a TSNE plot of the relationship embeddings, it seems this isn&#39;t the case - GNBR relations cluster together, and so do DGIdb relations. . !git clone https://github.com/gnn4dr/DRKG.git !wget https://dgl-data.s3-us-west-2.amazonaws.com/dataset/DRKG/drkg.tar.gz !gzip -d drkg.tar.gz !tar --get -f drkg.tar !rm -rf drkg.tar . import sys sys.path.append(&#39;DRKG/&#39;) import utils import csv import torch as th import numpy as np import pandas as pd from matplotlib import cm import matplotlib.pyplot as plt from sklearn.utils import check_random_state from sklearn.manifold import TSNE import torch.nn.functional as fn . rels = pd.read_csv(&#39;relation_glossary.tsv&#39;, sep=&#39; t&#39;) rel2id = dict(zip(rels[&#39;Relation-name&#39;],rels.index.tolist())) dataset_id = {} for rel_name, i in rel2id.items(): rel_key = rel_name.split(&#39;::&#39;)[0] if dataset_id.get(rel_key, None) is None: dataset_id[rel_key] = [] dataset_id[rel_key].append(i) X_embedded = TSNE(n_components=2).fit_transform(rel_emb).T p = cm.rainbow(int(255/2 * 1)) fig = plt.figure() ax = fig.add_subplot(111) for key, val in dataset_id.items(): val = np.asarray(val, dtype=np.long) ax.plot(X_embedded[0][val], X_embedded[1][val], &#39;.&#39;, label=key) lgd = ax.legend(bbox_to_anchor=(1.0, 1.0)) plt.savefig(&#39;relation.eps&#39;, bbox_extra_artists=(lgd,), bbox_inches=&#39;tight&#39;, format=&#39;eps&#39;) . The PostScript backend does not support transparency; partially transparent artists will be rendered opaque. The PostScript backend does not support transparency; partially transparent artists will be rendered opaque. . Let&#39;s use the various drug-treats-disease relations to find some repurposable drugs for chronic pancreatits. . # download_and_extract() # Get all drugbank IDs for all drugs !wget https://raw.githubusercontent.com/dhimmel/drugbank/gh-pages/data/drugbank.tsv drugbank = pd.read_csv(&#39;drugbank.tsv&#39;,sep=&#39; t&#39;) drugbank[&#39;drugbank_id&#39;] = &#39;Compound::&#39;+drugbank.drugbank_id drug_list = drugbank[&#39;drugbank_id&#39;].tolist() # There are 3 treatment edges from Hetionet, GNBC and DrugBank treatment = [&#39;Hetionet::CtD::Compound:Disease&#39;,&#39;GNBR::T::Compound:Disease&#39;,&#39;DRUGBANK::treats::Compound:Disease&#39;] # MESH ID for chronic pancreatits disease_list = [ &#39;Disease::MESH:D050500&#39; ] # Get drugname/disease name to entity ID mappings entity_idmap_file = &#39;embed/entities.tsv&#39; relation_idmap_file = &#39;embed/relations.tsv&#39; entity_id_map = pd.read_csv(entity_idmap_file,sep=&#39; t&#39;, header=None) entity_id_map = dict(zip(entity_id_map[1], entity_id_map[0])) relation_map = pd.read_csv(relation_idmap_file,sep=&#39; t&#39;, header=None) relation_map = dict(zip(relation_map[0], relation_map[1])) # handle the ID mapping drug_ids = [] disease_ids = [] for drug in drug_list: if drug in list(entity_id_map.values()): drug_ids.append(entity_map[drug]) for disease in disease_list: disease_ids.append(entity_map[disease]) treatment_rid = [relation_map[treat] for treat in treatment] # Load embeddings entity_emb = np.load(&#39;embed/DRKG_TransE_l2_entity.npy&#39;) rel_emb = np.load(&#39;embed/DRKG_TransE_l2_relation.npy&#39;) # Get ids drug_ids = th.tensor(drug_ids).long() disease_ids = th.tensor(disease_ids).long() treatment_rid = th.tensor(treatment_rid) # Get embeddings drug_emb = th.tensor(entity_emb[drug_ids]) treatment_embs = [th.tensor(rel_emb[rid]) for rid in treatment_rid] . gamma=12.0 #TransE score function def transE_l2(head, rel, tail): score = head + rel - tail return gamma - th.norm(score, p=2, dim=-1) scores_per_disease = [] dids = [] for rid in range(len(treatment_embs)): treatment_emb=treatment_embs[rid] for disease_id in disease_ids: disease_emb = entity_emb[disease_id] score = fn.logsigmoid(transE_l2(drug_emb, treatment_emb, disease_emb)) scores_per_disease.append(score) dids.append(drug_ids) scores = th.cat(scores_per_disease) dids = th.cat(dids) # sort scores in decending order idx = th.flip(th.argsort(scores), dims=[0]) scores = scores[idx].numpy() dids = dids[idx].numpy() _, unique_indices = np.unique(dids, return_index=True) topk=100 topk_indices = np.sort(unique_indices)[:topk] proposed_dids = dids[topk_indices] proposed_scores = scores[topk_indices] # Create dataframe of scores with drug metadata scores = pd.DataFrame(zip([entity_id_map[i] for i in proposed_dids], proposed_scores)) scores.columns = [&#39;drugbank_id&#39;,&#39;score&#39;] scores = scores.merge(drugbank, on=&#39;drugbank_id&#39;) . Inital thoughts on predictions for CP . Octreotide - Definitely the most interesting of suggestions. Octreotide is synthetic analogue of the peptide hormone somatostatin. In the pancreas, somatostatin inhibits the secretion of pancreatic hormones, including glucagon and insulin. In the gastrointestinal tract, the hormone reduces gastric secretion and the emission of gastrointestinal hormones, such as secretin and gastrin. Specific somatostatin receptors can modulate secretory response of the acinar cells via reduction of intracellular cAMP. Researchers have shown IV octreotide raises somatostatin to normal levels in plasma, and reduces circulating TNFÎ± and IL6, reducing severity of the disease. . | Dexamethasone - Large dose dexamethasone is known to reduce severity of SAP, but the mechanism is still not fully estabished. A research group demonstrated that potential mechanisms were related to the inflammatory mediators inhibition and pancreatic acinar cell apoptosis. Another group showed upregulation of PAP genes. Both inflammation and acinar cell apopotsis are shared pathomechanisms in SAP and CP. It seems reasonable that large doses of dexamethasone could be beneficial for CP. . | Ursodeoxycholic acid - UDCA has been shown to reduce pancreatitic enzyme secretion. This paper describes a marked decrease in trypsin levels. This paper shows a protective effect of oral UDCA on pancreatic ductal injury by reducing apoptosis. . | Cholestrol/Simvastatin - Patients with low (&lt;160 mg/dL) or high total cholesterol levels (&gt;240 mg/dL) had a high incidence of severe acute pancreatitis ref30041-X/fulltext). Simvastatin is an anticholesteremic, so it&#39;s logical that lowering high cholestrol levels could have a protective effect against CP. . | Ethanol, ceruletide, L-arginine, pentagastrin - It seems the model has conflated molecules that cause (or contribute) to CP, with molecules that can treat the disease. Ethanol, ceruletide, L-arginine, pentagastrin are all used to induce CP in experimental models. . | Calcium - CP is a calcifying fibrotic disease predominantly caused by Ca2+ dysregulation in acinar cells driven by LoF and GoF mutations in CFTR. It&#39;s promising the model highly associated calcium with the disease. . | Glutathione - There is a known interplay between reactive oxygen species (ROS) and Ca2+ signaling, and antioxidant therapy has been suggested for CP. Enhanced generation of oxygen radicals cause changes in glutathione metabolism ref, although I&#39;m unsure if a nutriceutical administration of glutathione would affect the upstream process of ROS buildup. . | Progesterone, Testosterone - The appearance of hormones is pretty interesting. Women who have used hormone replacement therapy have a significantly higher risk of developing AP (I think 57% but I can&#39;t remember the source). I have no idea how hormone deficiencies relate to the pathomechanisms of AP/CP. . | . from pandas import option_context with option_context(&#39;display.max_colwidth&#39;, 200): display(scores.head(20).drop(columns=[&#39;type&#39;,&#39;atc_codes&#39;,&#39;inchi&#39;,&#39;inchikey&#39;])) . drugbank_id score name groups categories description . 0 Compound::DB00403 | -0.243431 | Ceruletide | approved | Diagnostic Agents | Caerulein is a specific decapeptide similar in action and composition to the natural gastrointestinal peptide hormone cholecystokinin. It stimulates gastric, biliary, and pancreatic secretion; and... | . 1 Compound::DB04540 | -0.252672 | Cholesterol | experimental | NaN | The principal sterol of all higher animals, distributed in body tissues, especially the brain and spinal cord, and in animal fats and oils. [PubChem] | . 2 Compound::DB01234 | -0.298165 | Dexamethasone | approved|investigational | Antineoplastic Agents, Hormonal|Anti-Inflammatory Agents|Glucocorticoids|Antiemetics | An anti-inflammatory 9-fluoro-glucocorticoid. [PubChem] | . 3 Compound::DB00104 | -0.301983 | Octreotide | approved|investigational | Antineoplastic Agents, Hormonal|Gastrointestinal Agents|Hormone Replacement Agents | Octreotide is the acetate salt of a cyclic octapeptide. It is a long-acting octapeptide with pharmacologic properties mimicking those of the natural hormone somatostatin. | . 4 Compound::DB02772 | -0.305478 | Sucrose | experimental | NaN | A nonreducing disaccharide composed of glucose and fructose linked via their anomeric carbons. It is obtained commercially from sugarcane, sugar beet (beta vulgaris), and other plants and used ext... | . 5 Compound::DB00898 | -0.316161 | Ethanol | approved | Anti-Infective Agents, Local|Central Nervous System Depressants|Solvents | A clear, colorless liquid rapidly absorbed from the gastrointestinal tract and distributed throughout the body. It has bactericidal activity and is used often as a topical disinfectant. It is wide... | . 6 Compound::DB00125 | -0.322239 | L-Arginine | approved|nutraceutical | Dietary Supplements|Micronutrients|Conditionally Essential Amino Acids|Supplements | An essential amino acid that is physiologically active in the L-form. [PubChem] | . 7 Compound::DB01775 | -0.330103 | Dihydroxyacetone | experimental | NaN | A ketotriose compound. Its addition to blood preservation solutions results in better maintenance of 2,3-diphosphoglycerate levels during storage. It is readily phosphorylated to dihydroxyacetone ... | . 8 Compound::DB00644 | -0.337302 | Gonadorelin | approved | NaN | Gonadorelin is another name for gonadotropin-releasing hormone (GnRH). It is a synthetic decapeptide prepared using solid phase peptide synthesis. GnRH is responsible for the release of follicle s... | . 9 Compound::DB00183 | -0.348871 | Pentagastrin | approved | Diagnostic Agents | A synthetic pentapeptide that has effects like gastrin when given parenterally. It stimulates the secretion of gastric acid, pepsin, and intrinsic factor, and has been used as a diagnostic aid. [P... | . 10 Compound::DB05381 | -0.350090 | histamine dihydrochloride | investigational | NaN | A depressor amine derived by enzymatic decarboxylation of histidine. It is a powerful stimulant of gastric secretion, a constrictor of bronchial smooth muscle, a vasodilator, and also a centrally ... | . 11 Compound::DB00119 | -0.360811 | Pyruvic acid | approved|nutraceutical | Dietary Supplements|Micronutrients|Supplements | An intermediate compound in the metabolism of carbohydrates, proteins, and fats. In thiamine deficiency, its oxidation is retarded and it accumulates in the tissues, especially in nervous structur... | . 12 Compound::DB00396 | -0.363712 | Progesterone | approved | Progestins|Contraceptive Agents | The major progestational steroid that is secreted primarily by the corpus luteum and the placenta. Progesterone acts on the uterus, the mammary glands, and the brain. It is required in embryo impl... | . 13 Compound::DB01373 | -0.373770 | Calcium | nutraceutical | NaN | Calcium plays a vital role in the anatomy, physiology and biochemistry of organisms and of the cell, particularly in signal transduction pathways. The skeleton acts as a major mineral storage site... | . 14 Compound::DB00641 | -0.377616 | Simvastatin | approved | Anticholesteremic Agents|Hydroxymethylglutaryl-CoA Reductase Inhibitors|Hypolipidemic Agents | Simvastatin is a lipid-lowering agent that is derived synthetically from the fermentation of Aspergillus terreus. It is a potent competitive inhibitor of 3-hydroxy-3-methylglutaryl coenzyme A redu... | . 15 Compound::DB00143 | -0.400171 | Glutathione | approved|nutraceutical | Dietary Supplements|Micronutrients|Supplements | A tripeptide with many roles in cells. It conjugates to drugs to make them more soluble for excretion, is a cofactor for some enzymes, is involved in protein disulfide bond rearrangement and redu... | . 16 Compound::DB03904 | -0.404884 | Urea | experimental | NaN | A compound formed in the liver from ammonia produced by the deamination of amino acids. It is the principal end product of protein catabolism and constitutes about one half of the total urinary so... | . 17 Compound::DB01708 | -0.412452 | Dehydroepiandrosterone | nutraceutical | Adjuvants, Immunologic | Dehydroepiandrosterone (DHEA) is a major C19 steroid produced by the adrenal cortex. It is also produced in small quantities in the testis and the ovary. Dehydroepiandrosterone (DHEA) can be conve... | . 18 Compound::DB00624 | -0.414911 | Testosterone | approved|investigational | Androgens | Testosterone is a steroid sex hormone found in both men and women. In men, testosterone is produced primarily by the Leydig (interstitial) cells of the testes when stimulated by luteinizing hormon... | . 19 Compound::DB01586 | -0.416042 | Ursodeoxycholic acid | approved|investigational | Cholagogues and Choleretics | Ursodeoxycholic acid is an epimer of chenodeoxycholic acid (DB06777). It is a mammalian bile acid found first in the bear and is apparently either a precursor or a product of chenodeoxycholate. It... | .",
            "url": "https://finlayiainmaclean.github.io/blog/useful_resources/chronic_pancreatitis/2021/10/13/drkg.html",
            "relUrl": "/useful_resources/chronic_pancreatitis/2021/10/13/drkg.html",
            "date": " â¢ Oct 13, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Downloading, processing and classifying RNA-seq gene expression",
            "content": "This post shows how to use Guassian mixture models for data transformation of RNAseq expression. But first, we need some raw gene expression data. . Holy macaroni, what did we do before Nextflow? In the past, I&#39;ve hacked together a RNAseq pipeline of FastQC-&gt;TrimGalore-&gt;FastQC-&gt;Salmon-&gt;A few python plots for QC. Nextflow&#39;s RNAseq pipeline is so much more comprehensive - see the screengrab from their git repo. Let&#39;s install Nextflow. It seems to work best in docker, so do this outside of colab. . . !wget -qO- https://get.nextflow.io | bash !chmod +x nextflow . Download FASTQ files for one run (SRR4457124) of a study sequencing colorectal cancer biospecimens. . !echo &quot;SRR4457124&quot; &gt;&gt; ids.txt !nextflow run nf-core/fetchngs --input ids.txt -profile docker . Create samplesheet (in our case just two pairsed FASTQ files for one run), and run the RNAseq pipeline. . !wget -L https://raw.githubusercontent.com/nf-core/rnaseq/master/bin/fastq_dir_to_samplesheet.py ./fastq_dir_to_samplesheet.py &lt;FASTQ_DIR&gt; samplesheet.csv --strandedness reverse !nextflow run nf-core/rnaseq --input samplesheet.csv --genome GRCh37 -profile docker . Back in colab, import the gene level psuedocounts from our run, log2 transform, and remove the spike at 0 (now -30). . genes = pd.read_csv(&#39;genes.csv&#39;) ex = np.log2(genes.counts+1e-9) ex = ex[ex&gt;np.log2(1e-9)+1e-9] . Fit a 2 component Guassian mixture model, and compute the means, covariances, and weights of each Guassian distribution. We also need to compute the (approximate) point as which the two distributions intersect. . import pandas as pd import numpy as np import seaborn as sns from sklearn.mixture import GaussianMixture from sklearn.preprocessing import QuantileTransformer from matplotlib import pyplot as plt from scipy import stats def solve(m1,m2,std1,std2): a = 1/(2*std1**2) - 1/(2*std2**2) b = m2/(std2**2) - m1/(std1**2) c = m1**2 /(2*std1**2) - m2**2 / (2*std2**2) - np.log(std2/std1) return np.roots([a,b,c]) x = np.linspace(ex.min(), ex.max(), 200) qt = QuantileTransformer(n_quantiles=10, random_state=0,output_distribution=&#39;normal&#39;) gm = GaussianMixture(n_components=2, random_state=0) gm.fit(ex.values.reshape(-1, 1)) m1, m2 = gm.means_.flatten() std1, std2 = gm.covariances_.flatten() w1, w2 = gm.weights_ threshold1,threshold2 = sorted(solve(m1,m2,std1,std2)) high_threshold = (m2*0.8+x.max()*0.2)/1 . Lastly, let&#39;s discretize the expression into: . Not expressed | Low expression | Medium expression | High expression | . Let&#39;s define not expressed as anything lower than the mean of the first Guassian and low expression as between this and the intersection of Guassians. For medium expression, let&#39;s define a semi-arbitary point on the second Guassian, say 80% towards the second mean. High expression is just anything above this point. . gk = stats.gaussian_kde(ex) dd = gk.evaluate(x) plt.plot(x, dd, &#39;k-&#39;) # sns.distplot(gbm_ex) def gaussian(x, m, s, w): a = w / (s * np.sqrt(2 * np.pi)) b = -(x - m) ** 2 c = 2 * s ** 2 return a * np.exp(b / c) plt.plot(x, gaussian(x, m1, std1, w1), &quot;k--&quot;) plt.plot(x, gaussian(x, m2, std2, w2), &quot;k--&quot;) x_not_ex = np.linspace(x.min(), m1, 50) plt.fill_between(x_not_ex, gk.evaluate(x_not_ex), color=&quot;grey&quot;) x_low = np.linspace(m1, threshold1, 50) plt.fill_between(x_low, gk.evaluate(x_low), color=&quot;limegreen&quot;) x_mid = np.linspace(threshold1, high_threshold, 50) plt.fill_between(x_mid, gk.evaluate(x_mid), color=&quot;forestgreen&quot;) x_high = np.linspace(high_threshold, x.max(), 50) plt.fill_between(x_high, gk.evaluate(x_high), color=&quot;darkgreen&quot;) plt.xlabel(&#39;log2[pseudocounts]&#39;) plt.ylabel(&#39;ratio genes as expression level&#39;); .",
            "url": "https://finlayiainmaclean.github.io/blog/useful_resources/2021/10/12/_rnaseq.html",
            "relUrl": "/useful_resources/2021/10/12/_rnaseq.html",
            "date": " â¢ Oct 12, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Prerank GSEA for assayable biological processes",
            "content": "Whilst it often useful to use GeneOntology&#39;s biological processes to approximate the pathomechanisms of a disease, one frequently finds themself whittling through a list of enriched biological processes, trying to find a process that is actually assayable. . Fortunately, living deep within the Supplementary Material of a Nature paper, lives a curated list of processes testable through specific molecular experiments. . Let&#39;s install gseapy and download the data. . !pip install gseapy !wget https://static-content.springer.com/esm/art%3A10.1038%2Fng.3259/MediaObjects/41588_2015_BFng3259_MOESM9_ESM.xlsx !mv 41588_2015_BFng3259_MOESM9_ESM.xlsx processes.xlsx !wget https://static-content.springer.com/esm/art%3A10.1038%2Fng.3259/MediaObjects/41588_2015_BFng3259_MOESM12_ESM.xlsx !mv 41588_2015_BFng3259_MOESM12_ESM.xlsx tissue_go_mapping.xlsx !wget https://raw.githubusercontent.com/finlayiainmaclean/datadump/main/EFO_0000342-associated-diseases.csv !curl -OL https://github.com/finlayiainmaclean/datadump/blob/main/genego.tab.zip?raw=true !unzip genego.tab.zip?raw=true . import gseapy as gp import pandas as pd import numpy as np . gene2go.go.nunique(), len(processes) . (12248, 973) . There are 973 testable processes out of 12248.. Not that many.. . processes = pd.read_excel(&#39;processes.xlsx&#39;, skiprows=1) processes . GO Term Name GO Term ID . 0 abscisic_acid_mediated_signaling_pathway | GO:0009738 | . 1 abscisic_acid_metabolic_process | GO:0009687 | . 2 acetyl_coa_biosynthetic_process_from_acetate | GO:0019427 | . 3 acetylcholine_transport | GO:0015870 | . 4 actin_cytoskeleton_reorganization | GO:0031532 | . ... ... | ... | . 968 xanthophyll_metabolic_process | GO:0016122 | . 969 xenobiotic_metabolic_process | GO:0006805 | . 970 xylan_catabolic_process | GO:0045493 | . 971 xylem_and_phloem_pattern_formation | GO:0010051 | . 972 zinc_ion_transport | GO:0006829 | . 973 rows Ã 2 columns . The paper also mapped tissues to biological processes via first using co-occurences, and then manually curating the list. . tissue_mapping = pd.read_excel(&#39;tissue_go_mapping.xlsx&#39;, skiprows=1).set_index(&#39;BRENDA Tissue ID&#39;) bto2name = dict(zip(tissue_mapping.index, tissue_mapping.Tissue)) go2bto = {} for bto, row in tissue_mapping.drop(columns=[&#39;Tissue&#39;]).iterrows(): for go in row: if go is None: break go2bto[go] = bto . Let&#39;s run a prerank gene set enrichment analysis, using only testable biological processes. First we need to generate a geneset. . genego = pd.read_csv(&#39;genego.tab&#39;,sep=&#39; t&#39;) gene2go = [] go2name = {} for row in genego.dropna(subset=[&#39;Gene ontology (biological process)&#39;]).itertuples(): for _go in row[4].split(&#39;; &#39;): go = _go.split(&#39;[&#39;)[1].replace(&#39;]&#39;,&#39;&#39;) name = _go.split(&#39; [&#39;)[0] gene2go.append((row[2], go)) go2name[go] = name gene2go = pd.DataFrame(gene2go,columns =[&#39;gene&#39;,&#39;go&#39;]) gene2go_dict = gene2go.groupby(&#39;go&#39;)[&#39;gene&#39;].apply(list).to_dict() gene2go_testable_dict = dict([(i, gene2go_dict[i]) for i in np.intersect1d(processes[&#39;GO Term ID&#39;], gene2go.go)]) . Let&#39;s run the prerankGSEA for chronic pancreatitis genes, defined by the overall association score in OpenTargets. . cp_targets = pd.read_csv(&#39;EFO_0000342-associated-diseases.csv&#39;) cp_targets.head(5) . symbol overallAssociationScore geneticAssociations somaticMutations drugs pathwaysSystemsBiology textMining rnaExpression animalModels targetName . 0 PRSS1 | 0.834384 | 0.9183390021590296 | No data | No data | No data | 0.1838682865290527 | No data | 0.5693580106773287 | serine protease 1 | . 1 SPINK1 | 0.804783 | 0.8862311248507138 | No data | No data | No data | 0.23856390277427408 | No data | 0.3298784490540059 | serine peptidase inhibitor Kazal type 1 | . 2 CTRC | 0.740035 | 0.8910696416923192 | No data | No data | No data | 0.09941106709313025 | No data | 0.29290105828927904 | chymotrypsin C | . 3 CFTR | 0.696968 | 0.9074161629304885 | No data | No data | No data | 0.2678564156117781 | No data | 0.3978335055391351 | CF transmembrane conductance regulator | . 4 VDR | 0.369580 | No data | No data | 0.607930797611621 | No data | No data | No data | No data | vitamin D receptor | . Running the enrichment, we see calcium-mediated signaling as one of the most enriched testable processes. . pre_res = gp.prerank(rnk=cp_targets[[&#39;symbol&#39;,&#39;overallAssociationScore&#39;]].copy(), gene_sets=gene2go_testable_dict.copy(), processes=2, permutation_num=500, # reduce number to speed up testing outdir=&#39;prerank_report&#39;, format=&#39;png&#39;, seed=6) pre_res = pd.read_csv(&#39;prerank_report/gseapy.prerank.gene_sets.report.csv&#39;) pre_res[&#39;go_name&#39;] = pre_res.Term.apply(go2name.get) #Map tissue pre_res[&#39;bto&#39;] = pre_res.Term.apply(go2bto.get) pre_res[&#39;tissue_name&#39;] = pre_res.bto.apply(bto2name.get) pre_res = pre_res.sort_values(by=&#39;es&#39;,ascending=False) pre_res.head(10) . Term es nes pval fdr geneset_size matched_size genes ledge_genes go_name bto tissue_name . 0 GO:0006367 | 0.827233 | 1.431275 | 0.016000 | 0.220365 | 140 | 17 | VDR;NR3C1;CREBBP;CCN2;PGR;THRA;PPARG;E2F2;NR4A... | VDR;NR3C1;CREBBP;CCN2;PGR;THRA | transcription initiation from RNA polymerase I... | None | None | . 4 GO:0006919 | 0.742733 | 1.288945 | 0.068000 | 0.846401 | 89 | 21 | CDKN2A;NGFR;S100A9;NGF;EIF2AK3;NLRP1;BAD;PPARG... | CDKN2A;NGFR;S100A9;NGF;EIF2AK3;NLRP1;BAD | activation of cysteine-type endopeptidase acti... | None | None | . 1 GO:0016579 | 0.736472 | 1.287383 | 0.062000 | 0.577623 | 265 | 25 | CFTR;SMAD4;IL33;PTEN;TP53;BAP1;CYLD;HIF1A;MYC;... | CFTR;SMAD4 | protein deubiquitination | None | None | . 3 GO:0009749 | 0.720428 | 1.247147 | 0.122000 | 0.618023 | 62 | 18 | SLC8A1;CCN2;ILDR2;GIPR;BAD;PTEN;NEUROD1;MAFA;R... | SLC8A1;CCN2;ILDR2;GIPR;BAD;PTEN;NEUROD1;MAFA;R... | response to glucose | None | None | . 2 GO:0042593 | 0.695962 | 1.227794 | 0.060000 | 0.577756 | 104 | 37 | NGFR;PDX1;BHLHA15;GCK;INS;LEP;GCGR;WFS1;LEPR;C... | NGFR;PDX1;BHLHA15;GCK;INS;LEP;GCGR;WFS1;LEPR;C... | glucose homeostasis | None | None | . 5 GO:0019722 | 0.664942 | 1.138633 | 0.197581 | 0.944897 | 71 | 17 | CXCR2;CXCR1;BHLHA15;EIF2AK3;PDPK1;CHRM3;TRPM4;... | CXCR2;CXCR1;BHLHA15;EIF2AK3;PDPK1;CHRM3 | calcium-mediated signaling | None | None | . 6 GO:0050821 | 0.636343 | 1.112191 | 0.252505 | 0.976760 | 197 | 21 | CDKN2A;WFS1;PTEN;TP53;CDKN1A;CHEK2;SMAD3;PARK7... | CDKN2A;WFS1;PTEN;TP53;CDKN1A | protein stabilization | None | None | . 8 GO:0001666 | 0.603386 | 1.069221 | 0.310000 | 1.000000 | 157 | 36 | SMAD4;CREBBP;LEP;TLR2;CD38;NF1;HIF1A;EGR1;REG1... | SMAD4;CREBBP;LEP;TLR2;CD38 | response to hypoxia | None | None | . 9 GO:0016567 | 0.600506 | 1.053758 | 0.344000 | 1.000000 | 414 | 21 | CRBN;DDB1;RBX1;CUL4A;FEM1B;SMURF1;CUL9;SOCS1;H... | CRBN;DDB1;RBX1;CUL4A;FEM1B;SMURF1;CUL9;SOCS1 | protein ubiquitination | None | None | . 10 GO:0007204 | 0.583698 | 1.035730 | 0.380000 | 1.000000 | 149 | 25 | CXCR2;CXCR1;CD38;PKD1;GIPR;FFAR1;GHRL;CCKBR;JA... | CXCR2;CXCR1;CD38;PKD1;GIPR;FFAR1;GHRL;CCKBR;JA... | positive regulation of cytosolic calcium ion c... | None | None | . Let&#39;s take a look at the ES plot for calcium signalling. . from IPython.display import Image Image(&#39;GO:0019722.prerank.png&#39;,width=1000, height=1000) . . How does the python package gseapy compare with the R library fgsea? First let&#39;s set up R magic for colab, and install Bioconductor. . %load_ext rpy2.ipython . The rpy2.ipython extension is already loaded. To reload it, use: %reload_ext rpy2.ipython . %%R if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;fgsea&quot;) . %%R library(fgsea) library(data.table) library(ggplot2) . I&#39;m sure there is a way to convert our python dict geneset to R&#39;s ListVector, but I cba to work it out. Instead, let&#39;s create a GMT format geneset from the pandas dataframe. . df = pd.DataFrame(zip(gene2go_testable_dict.keys(), gene2go_testable_dict.values())) gene2go_testable_gmt = pd.DataFrame(df[1].tolist(), index= df[0]) gene2go_testable_gmt.to_csv(&#39;testable_processes.gmt&#39;,sep=&#39; t&#39;,header=None) %R pathways &lt;- gmtPathways(&#39;testable_processes.gmt&#39;) . ListVector with 638 elements. GO:0000054 StrVector with 412 elements. &#39;LSG1&#39; | &#39;ABCE1&#39; | &#39;EIF6&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0000077 StrVector with 412 elements. &#39;RAD1&#39; | &#39;USP28&#39; | &#39;PTPN11&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0000097 StrVector with 412 elements. &#39;&#39; | &#39;&#39; | &#39;&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . ... ... | . GO:0090398 StrVector with 412 elements. &#39;H2AX&#39; | &#39;TBX3&#39; | &#39;SMC5&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0097191 StrVector with 412 elements. &#39;SMAD3&#39; | &#39;SGPP1&#39; | &#39;PML&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . GO:0097193 StrVector with 412 elements. &#39;SGPP1&#39; | &#39;MSH6&#39; | &#39;HRAS&#39; | ... | &#39;&#39; | &#39;&#39; | &#39;&#39; | . | . And the same with our scores, converting them into rnk file format. . # cp_targets[&#39;overallAssociationScore&#39;] = genetic_gp_targets[&#39;overallAssociationScore&#39;].astype(float) cp_targets[[&#39;symbol&#39;,&#39;overallAssociationScore&#39;]].to_csv(&#39;cp_targets.rnk&#39;,sep=&#39; t&#39;, index=False) . %%R ranks &lt;- read.table(&#39;cp_targets.rnk&#39;, header=TRUE, colClasses = c(&quot;character&quot;, &quot;numeric&quot;)) ranks &lt;- setNames(ranks$overallAssociationScore, ranks$symbol) . Running fgsea with (roughly) the same config as fgsea&#39;s python counterpart. . %%R -o results results &lt;- fgsea(pathways = pathways, stats = ranks, minSize = 15, maxSize = 500) old_results &lt;- results results$leadingEdge &lt;- lapply(results$leadingEdge, function(v) paste(v, collapse=&#39;,&#39;)) results &lt;- data.frame(lapply(results, unlist)) . results[&#39;go_name&#39;] = results.pathway.apply(go2name.get) results.sort_values(by=&#39;NES&#39;, ascending=False).head(10) . pathway pval padj log2err ES NES size leadingEdge go_name . 4 GO:0006367 | 0.022816 | 0.398352 | 0.352488 | 0.827233 | 1.444742 | 17 | VDR,NR3C1,CREBBP,CCN2,PGR,THRA | transcription initiation from RNA polymerase I... | . 7 GO:0006919 | 0.054000 | 0.398352 | 0.191892 | 0.742733 | 1.305878 | 21 | CDKN2A,NGFR,NGF,S100A9,EIF2AK3,NLRP1,BAD | activation of cysteine-type endopeptidase acti... | . 16 GO:0016579 | 0.048951 | 0.398352 | 0.202072 | 0.736472 | 1.299012 | 25 | CFTR,SMAD4,IL33,PTEN | protein deubiquitination | . 13 GO:0009749 | 0.090271 | 0.523571 | 0.145516 | 0.720428 | 1.263514 | 18 | SLC8A1,CCN2,ILDR2,GIPR,BAD,PTEN,NEUROD1,MAFA,R... | response to glucose | . 23 GO:0042593 | 0.054945 | 0.398352 | 0.190023 | 0.692868 | 1.233166 | 36 | NGFR,PDX1,BHLHA15,GCK,INS,LEP,GCGR,WFS1,LEPR,C... | glucose homeostasis | . 18 GO:0019722 | 0.186935 | 0.903518 | 0.095603 | 0.664942 | 1.161305 | 17 | CXCR2,CXCR1,BHLHA15,EIF2AK3,PDPK1,CHRM3 | calcium-mediated signaling | . 26 GO:0050821 | 0.226000 | 0.936286 | 0.084556 | 0.636343 | 1.118822 | 21 | CDKN2A,WFS1,PTEN,TP53,CDKN1A | protein stabilization | . 3 GO:0001666 | 0.280719 | 0.995976 | 0.073074 | 0.603386 | 1.073906 | 36 | SMAD4,CREBBP,LEP,TLR2,CD38 | response to hypoxia | . 15 GO:0016567 | 0.332000 | 0.995976 | 0.064794 | 0.600506 | 1.055813 | 21 | CUL4A,RBX1,CRBN,DDB1,FEM1B,SMURF1,CUL9,SOCS1,H... | protein ubiquitination | . 9 GO:0007204 | 0.412587 | 0.995976 | 0.054456 | 0.582426 | 1.027300 | 25 | CXCR2,CXCR1,CD38,PKD1,GIPR,FFAR1,GHRL,CCKBR,JA... | positive regulation of cytosolic calcium ion c... | . The ES plot for calcium signalling looks pretty similiar. . %%R plotEnrichment(pathways[[&quot;GO:0019722&quot;]], ranks) + labs(title=&quot;calcium-mediated signaling&quot;) . The fgsea package also have a gsea table plotting function. I don&#39;t think this really provides any additional information not shown in the pandas dataframe. The FDR for both packages is worryingly high. Perhaps this is due to either a very small geneset (there&#39;s only around ~600 goprocesses), or a relatively small number of genes with scores. Normally you would run prerank GSEA on the DEGs of a t&#39;omics comparison, and thus would have ~20,000 genes/score pairs. . %%R topPathwaysUp &lt;- old_results[ES &gt; 0][head(order(pval), n=10), pathway] topPathwaysDown &lt;- old_results[ES &lt; 0][head(order(pval), n=10), pathway] topPathways &lt;- c(topPathwaysUp, rev(topPathwaysDown)) plotGseaTable(pathways[topPathways], ranks, old_results, gseaParam=0.5) .",
            "url": "https://finlayiainmaclean.github.io/blog/useful_resources/2021/10/07/testable_processes.html",
            "relUrl": "/useful_resources/2021/10/07/testable_processes.html",
            "date": " â¢ Oct 7, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats.Â &#8617; . |",
          "url": "https://finlayiainmaclean.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ âsitemap.xmlâ | absolute_url }} | .",
          "url": "https://finlayiainmaclean.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}